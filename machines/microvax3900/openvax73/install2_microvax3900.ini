; Load CPU microcode
;load -r /usr/src/simh/VAX/ka610.bin
;load -r /usr/src/simh/VAX/ka620.bin
;load -r /usr/src/simh/VAX/ka620_orig.bin
;load -r /usr/src/simh/VAX/ka630.bin
;load -r /usr/src/simh/VAX/ka630_orig.bin
;load -r /usr/src/simh/VAX/ka655_orig.bin
; load -r /usr/src/simh/VAX/ka655x.bin
;load -r /usr/src/simh/VAX/ka750_new.bin
;load -r /usr/src/simh/VAX/ka750_old.bin
;
; Attach non-volatile RAM to a file
attach nvr nvram.bin
;

; offload disk, tape, and network IO to threads
set async
; This virtual machine has 64M memory
; set cpu 64m
SET CPU 512M
; Set CPU idle to be VMS - This works, but generates a diagnostic
set cpu idle=VMS

;
;Attach a console
;set console telnet=2223
;
; Define disk drive types. RA92 is largest-supported VAX drive.
set rq0 ra92
set rq1 ra92
set rq2 ra92
set rq3 cdrom
;
; Attach defined drives to local files
attach rq0 d0.dsk
attach rq1 d1.dsk
attach rq2 d2.dsk
;
; Attach the CD-ROM to its file (read-only)
;attach -r rq3 /usr/local/vax/data/cd.iso
attach -r rq3 OpenVMS_VAX_7.3.img
;
; Disable unused devices. It's also possible to disable individual devices,
; using a construction like "set rq2 disable" if desired.
;
set rl disable
set ts disable
set cr disable
set dz disable
set lpt disable
set ry disable
set ts disable
set tq disable

;
; Attach Ethernet to a network interface
set xq mac=08-00-2B-AA-BB-CC
attach xq eth0
;
; Now start the emulator

send delay=10000
expect ">>>" send "boot dua0\r"; c
expect "PLEASE ENTER DATE AND TIME (DD-MMM-YYYY  HH:MM)"  send "01-OCT-1984 00:00\r"; c
expect "Accounting information:" send "\r"; c
expect "Welcome to OpenVMS (TM) VAX Operating System, Version V7.3" send AFTER=1000000 "\rSYSTEM\r";c
expect "Password:" send "SYSTEMpassword\rset proc/priv=all\rinitialize dua1: DATA1\rinitialize dua2: DATA2\rmount/system dua1 data1\rmount/system dua2 data2\rr sys$system:sysgen\r";c
expect "SYSGEN" send "SET INTSTKPAGES 20\rWRITE CURRENT\rEXIT\rmount/over=id dua3:\r";c
expect "VAXVMS073 mounted" send "LICENSE REGISTER UCX /ISSUER=VLF /AUTHORIZATION=VLF-HOBBYIST-0000-001278 /PRODUCER=DEC /UNITS=0 /ACTIVITY=CONSTANT=100 /OPTIONS=(MOD_UNITS) /CHECKSUM=2-LPDD-AAFN-MHED-AOJI\rLICENSE LOAD UCX\r";c
expect "DEC UCX was successfully loaded with" send "LICENSE REGISTER DVNETEND /ISSUER=VLF /AUTHORIZATION=VLF-HOBBYIST-0000-000547 /PRODUCER=DEC /UNITS=0 /ACTIVITY=CONSTANT=100 /OPTIONS=(MOD_UNITS) /CHECKSUM=2-ACHC-HAIC-DCCG-HEGO\rLICENSE LOAD DVNETEND\r";c
expect "DEC DVNETEND was successfully loaded with" send "LICENSE REGISTER DVNETRTG /ISSUER=VLF /AUTHORIZATION=VLF-HOBBYIST-0000-000549 /PRODUCER=DEC /UNITS=0 /ACTIVITY=CONSTANT=100 /OPTIONS=(MOD_UNITS) /CHECKSUM=2-MHJK-BDAJ-FGEJ-PIMN\rLICENSE LOAD DVNETRTG\r";c
expect "DEC DVNETRTG was successfully loaded with" send "set def dua3:[tcpip_vax051.kit]\rproduct install *\r\r\r\r"; c
expect "Check the release notes for current status of the product." send "set def sys$update\r@autogen getdata shutdown nofeedback";c
expect "SYSTEM SHUTDOWN COMPLETE" exit

boot cpu
